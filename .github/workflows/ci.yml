name: Continuous Integration

on:
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: latest

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "pnpm"

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: cache-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

      - name: Run Typescript
        run: pnpm tsc

      - name: Build
        run: pnpm build

  lint:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: latest

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "pnpm"

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: cache-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Run Eslint
        run: pnpm lint

      - name: Run Prettier
        run: pnpm prettier:check

  e2e:
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: latest

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "pnpm"

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: cache-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Reset Database
        run: pnpm resetDatabase
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Seed database
        run: pnpm prisma db seed
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Run Playwright tests
        run: pnpm test:e2e
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          E2E_BASE_URL: ${{ secrets.E2E_BASE_URL }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}

      - name: Display GitHub Secret Names
        run: |
          echo "MY_SECRET_1 is ${{ secrets.E2E_BASE_URL }}" >> secrets.txt

      - name: Debugging with ssh
        uses: lhotari/action-upterm@v1

      - name: Upload report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
